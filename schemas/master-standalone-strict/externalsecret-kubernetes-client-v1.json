{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "kubernetes-client.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ExternalSecret"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "backendType": {
          "description": "Determines which backend to use for fetching secrets",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "secretsManager",
            "systemManager",
            "vault",
            "azureKeyVault",
            "gcpSecretsManager",
            "alicloudSecretsManager",
            "ibmcloudSecretsManager",
            "akeyless"
          ]
        },
        "controllerId": {
          "description": "The ID of controller instance that manages this ExternalSecret. This is needed in case there is more than a KES controller instances within the cluster.",
          "type": [
            "string",
            "null"
          ]
        },
        "data": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "isBinary": {
                "description": "Whether the backend secret shall be treated as binary data represented by a base64-encoded string. You must set this to true for any base64-encoded binary data in the backend - to ensure it is not encoded in base64 again. Default is false.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "key": {
                "description": "Secret key in backend",
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "description": "Name set for this key in the generated secret",
                "type": [
                  "string",
                  "null"
                ]
              },
              "path": {
                "description": "Path from SSM to scrape secrets This will fetch all secrets and use the key from the secret as variable name",
                "type": [
                  "string",
                  "null"
                ]
              },
              "property": {
                "description": "Property to extract if secret in backend is a JSON object",
                "type": [
                  "string",
                  "null"
                ]
              },
              "recursive": {
                "description": "Allow to recurse thru all child keys on a given path, default false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "secretType": {
                "description": "Used by: ibmcloudSecretsManager Type of secret - one of username_password, iam_credentials or arbitrary",
                "type": [
                  "string",
                  "null"
                ]
              },
              "version": {
                "description": "Used by: gcpSecretsManager",
                "type": [
                  "string",
                  "null"
                ],
                "x-kubernetes-int-or-string": true
              },
              "versionId": {
                "description": "Used by: secretsManager",
                "type": [
                  "string",
                  "null"
                ]
              },
              "versionStage": {
                "description": "Used by: alicloudSecretsManager, secretsManager",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "dataFrom": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "keyVaultName": {
          "description": "Used by: azureKeyVault",
          "type": [
            "string",
            "null"
          ]
        },
        "kvVersion": {
          "description": "Vault K/V version either 1 or 2, default = 2",
          "type": [
            "integer",
            "null"
          ],
          "maximum": 2,
          "minimum": 1
        },
        "projectId": {
          "description": "Used by: gcpSecretsManager",
          "type": [
            "string",
            "null"
          ]
        },
        "region": {
          "description": "Used by: secretsManager, systemManager",
          "type": [
            "string",
            "null"
          ]
        },
        "roleArn": {
          "description": "Used by: alicloudSecretsManager, secretsManager, systemManager",
          "type": [
            "string",
            "null"
          ]
        },
        "template": {
          "description": "Template which will be deep merged without mutating any existing fields. into generated secret, can be used to set for example annotations or type on the generated secret",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "type": {
          "description": "DEPRECATED: Use spec.template.type",
          "type": [
            "string",
            "null"
          ]
        },
        "vaultMountPoint": {
          "description": "Used by: vault",
          "type": [
            "string",
            "null"
          ]
        },
        "vaultRole": {
          "description": "Used by: vault",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "lastSync": {
          "type": [
            "string",
            "null"
          ]
        },
        "observedGeneration": {
          "type": [
            "number",
            "null"
          ]
        },
        "status": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "kubernetes-client.io",
      "kind": "ExternalSecret",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}